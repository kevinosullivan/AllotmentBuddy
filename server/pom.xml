<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.thesullies.allotment</groupId>
	<version>1.0.1-SNAPSHOT</version>
	<artifactId>AllotmentBuddy</artifactId>
	<packaging>war</packaging>
	<name>Allotment Buddy Server</name>
	<description>Allotment Buddy Server</description>
	<properties>
		<java-version>1.7</java-version>
		<compileSource>1.7</compileSource>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ssZ</maven.build.timestamp.format>
		<servlet.api.version>2.5</servlet.api.version>
		<javax.mail.version>1.4.5</javax.mail.version>
		<org.slf4j-version>1.6.6</org.slf4j-version>
		<jerseyVersion>2.5.1</jerseyVersion>
		<org.springframework.version>4.0.1.RELEASE</org.springframework.version>
		<spring-security-version>3.1.4.RELEASE</spring-security-version>
		<project.build.finalName>AllotmentBuddyServer</project.build.finalName>
		<hiberbate-core.version>4.3.0.Final</hiberbate-core.version>
		<hsqldb.version>2.3.1</hsqldb.version>
		<yammer.metrics>2.2.0</yammer.metrics>
	</properties>



	<scm>
		<connection>scm:git:ssh://kevinosullivan@https://github.com/kevinosullivan/AllotmentBuddy.git</connection>
		<developerConnection>scm:git:ssh://kevinosullivan@https://github.com/kevinosullivan/AllotmentBuddy.git</developerConnection>
	</scm>


	<repositories>
		<repository>
			<id>thirdparty-uploads</id>
			<name>JBoss Thirdparty Uploads</name>
			<url>https://repository.jboss.org/nexus/content/repositories/thirdparty-uploads</url>
		</repository>
		<repository>
			<id>sonatype-nexus-public</id>
			<name>SonaType public snapshots and releases repository</name>
			<url>https://oss.sonatype.org/content/groups/public</url>
			<releases>
				<!-- set to true if you wish to fetch releases from this repo too. -->
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>

		<!-- This section contains dependencies that are common to all sub projects. -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- for xml comparison in junit tests -->
			<groupId>xmlunit</groupId>
			<artifactId>xmlunit</artifactId>
			<version>1.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.0.6</version>
		</dependency>
		<dependency>
			<!-- joda time is a replacement for the JDK Date object. -->
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.1</version>
		</dependency>



		<!-- Apache HTTP Client -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
			<version>4.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>fluent-hc</artifactId>
			<version>4.3.1</version>
		</dependency>

		<!-- Java Google API Client Library <dependency> <groupId>com.google.apis</groupId> 
			<artifactId>google-api-services-mirror</artifactId> <version>v1-rev26-1.17.0-rc</version> 
			</dependency> <dependency> <groupId>com.google.http-client</groupId> <artifactId>google-http-client-jackson2</artifactId> 
			<version>1.17.0-rc</version> </dependency> -->

		<!-- To generate swagger docs from Jersey annotations -->
		<dependency>
			<groupId>com.wordnik</groupId>
			<artifactId>swagger-jersey2-jaxrs_2.10</artifactId>
			<version>1.3.1</version>
			<exclusions>
				<exclusion>
					<groupId>javax.ws.rs</groupId>
					<artifactId>jsr311-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jettison</groupId>
			<artifactId>jettison</artifactId>
			<version>1.3.4</version>
		</dependency>

		<!-- HIBERNATE / JPA RELATED DEPENDENCIES -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>1.4.3.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hiberbate-core.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hiberbate-core.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>${hiberbate-core.version}</version>
		</dependency>

		<dependency>
			<!-- Support for JodaTime in Hibernate 4 : http://stackoverflow.com/a/8989253/156477 -->
			<groupId>org.jadira.usertype</groupId>
			<artifactId>usertype.core</artifactId>
			<version>3.0.0.GA</version>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>${hsqldb.version}</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet.api.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- JERSEY -->
		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-spring3</artifactId>
			<version>${jerseyVersion}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jerseyVersion}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-common</artifactId>
			<version>${jerseyVersion}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>${jerseyVersion}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet-core</artifactId>
			<version>${jerseyVersion}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.test-framework.providers</groupId>
			<artifactId>jersey-test-framework-provider-grizzly2</artifactId>
			<version>${jerseyVersion}</version>
			<scope>test</scope>
		</dependency>

		<!-- SPRING Framework -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
			this if you use Spring Bean APIs (org.springframework.beans.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!-- Application Context (depends on spring-core, spring-expression, spring-aop, 
			spring-beans) This is the central artifact for Spring's Dependency Injection 
			Container and is generally always defined -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring-security-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring-security-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring-security-version}</version>
		</dependency>

		<!-- jdbc driver for connection to oracle <dependency> <groupId>com.oracle</groupId> 
			<artifactId>ojdbc14</artifactId> <version>10.2.0.4.0</version> </dependency> -->

		<!-- Support for testing Spring applications with tools such as JUnit and 
			TestNG This artifact is generally always defined with a 'test' scope for 
			the integration testing framework and unit testing stubs -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>


		<!-- Need to bundle MySQL connector now that we are using default AMIs 
			for ElasticBeanstalk -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.25</version>
		</dependency>

		<!-- RSS READER -->
		<dependency>
			<groupId>rome</groupId>
			<artifactId>rome</artifactId>
			<version>1.0</version>
		</dependency>

	</dependencies>
	<build>
		<directory>target</directory>
		<outputDirectory>target/classes</outputDirectory>
		<!-- <finalName>${project.artifactId}-${project.version}</finalName> -->
		<finalName>${project.build.finalName}</finalName>
		<testOutputDirectory>target/test-classes</testOutputDirectory>
		<sourceDirectory>src/main/java</sourceDirectory>
		<scriptSourceDirectory>src/main/scripts</scriptSourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>

		<plugins>
			<plugin>
				<!-- this plugin will get the build number from svn -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- mvn release is used for formal releases. This plugin is used to 
						set a build nbr only and we don't want to bog the developer down by having 
						to be connect network or having udpated source all the time. -->
					<doCheck>false</doCheck>
					<doUpdate>false</doUpdate>
					<revisionOnScmFailure>mylocalbuild-nosvn-access</revisionOnScmFailure>
					<!-- <useLastCommittedRevision>true</useLastCommittedRevision> -->
				</configuration>
			</plugin>

			<plugin>
				<!-- Plugin to generate the WAR file -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>manifest</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-Version>${project.version}</Implementation-Version>
							<Implementation-Build>${prefix.revision}</Implementation-Build>
							<Implementation-Timestamp>${maven.build.timestamp}</Implementation-Timestamp>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>


			<plugin>
				<!-- Plugin to generate the eclipse properties files. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<wtpversion>2.0</wtpversion>
				</configuration>
			</plugin>

			<plugin>
				<!-- dump the version number to version.txt, this will be used in later 
					deployment scripts -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>compile</id>
						<phase>compile</phase>
						<configuration>
							<tasks>
								<property name="project_version" value="${project.version}" />
								<property name="project_timestamp" value="${maven.build.timestamp}" />
								<property name="project_buildNumber" value="${prefix.revision}" />
								<property name="project_buildUsername" value="${user.name}" />
								<ant antfile="build.xml">
									<target name="echoVersion" />
									<target name="insertVersion" />
								</ant>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>br.com.ingenieux</groupId>
				<artifactId>beanstalk-maven-plugin</artifactId>
				<version>1.1.1</version>
				<configuration>
					<verbose>true</verbose>
					<applicationName>atiBeacon-DEV</applicationName>
					<applicationDescripton>SITA Lab ATI Beacon Project.</applicationDescripton>
					<region>eu-west-1</region>
					<cnamePrefix>atibeaconDev-dev1</cnamePrefix>
					<s3Bucket>elasticbeanstalk-eu-west-1-310522491524</s3Bucket>
					<s3Key>${project.artifactId}/${project.build.finalName}/${project.version}-${maven.build.timestamp}.war</s3Key>
					<versionLabel>${project.version}-${maven.build.timestamp}.war</versionLabel>
					<!-- will save as s3://[bucket name]/[artifactId]/artifactId-version-TIMESTAMP.war -->
				</configuration>
			</plugin>

			<!-- This plugin puts svn data into maven for use by other plugins -->
			<plugin>
				<groupId>com.google.code.maven-svn-revision-number-plugin</groupId>
				<artifactId>svn-revision-number-maven-plugin</artifactId>
				<version>1.13</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<entries>
						<entry>
							<prefix>prefix</prefix>
						</entry>
					</entries>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
